datasource db {
  provider = "postgresql"
  url      = env("SOVOK_DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

enum ReleaseStatus {
  Official
  Promotion
  Bootleg
  PseudoRelease
  Withdrawn
  Cancelled
  Unknown
}

enum ArtistType {
  Person
  Group
  Orchestra
  Choir
  Character
  Other
}

enum MediaFormat {
  MP3
  MP4
  WEBM
}

enum MediaSource {
  YouTube
}

model Artist {
  id       String     @id @default(uuid())
  name     String
  sortName String
  aliases  String[]
  type     ArtistType

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  releaseId String?

  tracks   TrackArtist[]
  releases ReleaseArtist[]
}

model Release {
  id          String        @id @default(uuid())
  title       String
  releaseDate DateTime?
  coverId     String?
  status      ReleaseStatus

  artists ReleaseArtist[]
  tracks  TrackRelease[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model TrackArtist {
  id         Int     @id @default(autoincrement())
  joinPhrase String?

  artistId String
  artist   Artist @relation(fields: [artistId], references: [id])

  trackId String
  track   Track  @relation(fields: [trackId], references: [id])

  name String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model ReleaseArtist {
  id         Int     @id @default(autoincrement())
  joinPhrase String?
  name       String?

  artistId String
  artist   Artist @relation(fields: [artistId], references: [id])

  releaseId String
  release   Release @relation(fields: [releaseId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model TrackRelease {
  id Int @id @default(autoincrement())

  releaseId String
  release   Release @relation(fields: [releaseId], references: [id])

  trackId String
  track   Track  @relation(fields: [trackId], references: [id])

  position Int

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Track {
  id         String @id @default(uuid())
  title      String
  durationMs Int?

  artists   TrackArtist[]
  releases  TrackRelease[]
  downloads Download[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Download {
  id String @id @default(uuid())

  trackId String
  track   Track  @relation(fields: [trackId], references: [id])

  durationMs Int

  format   MediaFormat
  platform MediaSource

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([trackId, platform])
}
